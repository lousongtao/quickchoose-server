/*
 * File: app/controller/DeskManageController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('digitalmenu.controller.DeskManageController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'shiftWorkListContainer',
            selector: '#shiftWorkListContainer'
        },
        {
            ref: 'deskManageContainer',
            selector: '#deskManageContainer'
        },
        {
            ref: 'indentCheckoutForm',
            selector: '#indentCheckoutForm'
        }
    ],

    onDeskCellPanelRender: function(component, eOpts) {
        //处理桌子选中和非选中状态
        component.body.on('click', function(){
            if (component.getXType() == 'deskCellPanel'){
                if (component.isSelected){
                    component.isSelected = false;
                    component.body.setStyle('background', '#FFFFFF');
                } else {
                    component.isSelected = true;
                    component.body.setStyle('background', '#3892D3');
                }
            }
        });
    },

    onCheckOutButtonClick: function(button, e, eOpts) {
        var deskContainer = this.getDeskManageContainer();
        var pDesk = deskContainer.down('#pDeskArea');
        var arrSelected = pDesk.getSelectDesks(pDesk.desklist);
        if (arrSelected.length == 0)
            return;
        if (arrSelected.length > 1){
            Ext.MessageBox.alert("Error", "Please select ONLY ONE table to Checkout.");
            return;
        }
        var indentInfo = arrSelected[0].indentInfo;

        if (indentInfo == null){
            Ext.MessageBox.alert("Error", "This table is not open.");
            return;
        }
        var checkoutForm = Ext.create('digitalmenu.view.IndentCheckoutForm');
        checkoutForm.indentInfo = indentInfo;
        checkoutForm.down('#lbDeskNo').setText('Table No :   ' + indentInfo.name);
        checkoutForm.down('#lbIndentPrice').setText('Price   :   $' + indentInfo.price);
        checkoutForm.down('#lbDiscountPrice').setText(indentInfo.price);
        var win = Ext.create('Ext.window.Window',{

        	header: false,
        	modal: true,
            border: false,
        	items:[
                checkoutForm
        	]

        });

        win.show();
    },

    onDirectDiscountChange: function(field, newValue, oldValue, eOpts) {
        var indentInfo = field.up('form').indentInfo;
        var rbDirect = field.up('form').down('#rbDirectDiscount');
        if(!rbDirect.checked){
            return;
        }
        var lbShouldPay = field.up('form').down('#lbDiscountPrice');
        lbShouldPay.setText(indentInfo.price - newValue);
    },

    onIndentPayButtonClick: function(button, e, eOpts) {
        var form = button.up('form');
        var indentInfo = form.indentInfo;
        var payway = 1;//cash
        if (form.down('#rbPayByCard').checked){
            payway = 2;//bank card
        } else if (form.down('#rbPayByMember').checked){
            payway = 3;//member card
        }

        var values = {
            userId : Ext.util.Cookies.get("userId"),
            sessionId : Ext.util.Cookies.get("sessionId"),
            id : indentInfo.indentId,
            payWay : payway,
            paidPrice : form.down('#lbDiscountPrice').text,
            operatetype : 4 //pay = 4
        };

        var win = form.up('window');

        var successCallback = function(resp){
                var result = Ext.decode(resp.responseText);

                if(result.result ==='ok'){
                    Ext.Msg.alert("SUCCESS","Pay this order successfully.");
                    win.close();
                } else if (result.result ==='invalid_session'){
                    digitalmenu.getApplication().onSessionExpired();
                } else {
                    Ext.Msg.alert('Failed',"Failed to pay this order.", resp.responseText);
                }
            };

        Ext.Ajax.request({
                                url: "indent/operateindent",
                                params : values,
                                success : successCallback,
                                failure : function(resp){
                                        Ext.Msg.alert('Failed',"Failed to pay this order.", resp.responseText);
                                }
                            });

    },

    onPrintDuizhangdanButtonClick: function(button, e, eOpts) {
        var deskContainer = this.getDeskManageContainer();
        var pDesk = deskContainer.down('#pDeskArea');
        var arrSelected = pDesk.getSelectDesks(pDesk.desklist);
        if (arrSelected.length == 0)
            return;
        if (arrSelected.length > 1){
            Ext.MessageBox.alert("Error", "Please select ONLY ONE table to print.");
            return;
        }
        var indentInfo = arrSelected[0].indentInfo;

        if (indentInfo == null){
            Ext.MessageBox.alert("Error", "This table is not open.");
            return;
        }
        var values = {
            userId : Ext.util.Cookies.get("userId"),
            sessionId : Ext.util.Cookies.get("sessionId"),
            indentId : indentInfo.indentId
        };

        var me =this;

        var successCallback = function(resp){
                var result = Ext.decode(resp.responseText);

                if(result.result ==='ok'){
                    Ext.Msg.alert("SUCCESS","Send print command to printer successfully.");
                } else if (result.result ==='invalid_session'){
                    digitalmenu.getApplication().onSessionExpired();
                } else {
                    Ext.Msg.alert('Failed',"Failed to send print command.", resp.responseText);
                }
            };

        Ext.Msg.confirm("Confirm", "You will print the order on desk "+ indentInfo.name,
                        function(btnId){
                            if (btnId === 'no'){
                                return;
                            }
                            Ext.Ajax.request({
                                url: "indent/printindent",
                                params : values,
                                success : successCallback,
                                failure : function(resp){
                                        Ext.Msg.alert('Failed',"Failed to send print command.", resp.responseText);
                                }
                            });
                        });

    },

    init: function(application) {
        this.control({
            "#deskManageContainer deskCellPanel": {
                render: this.onDeskCellPanelRender
            },
            "#deskManageContainer #btnCheckout": {
                click: this.onCheckOutButtonClick
            },
            "#indentCheckoutForm #nfDirectDiscount": {
                change: this.onDirectDiscountChange
            },
            "#indentCheckoutForm #btnPay": {
                click: this.onIndentPayButtonClick
            },
            "#deskManageContainer #btnPrintDuizhangdan": {
                click: this.onPrintDuizhangdanButtonClick
            }
        });
    }

});
