/*
 * File: app/controller/MainController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('digitalmenu.controller.MainController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'contentPanel',
            selector: '#mainView #contentPanel'
        }
    ],

    onAccountButtonClick: function(button, e, eOpts) {
        var contentPanel = this.getContentPanel();
        var accountPanel = Ext.create('digitalmenu.view.AccountListContainer');
        var grid = accountPanel.down('#accountListGrid');

        grid.store.proxy.extraParams.userId = Ext.util.Cookies.get('userId');
        grid.store.proxy.extraParams.sessionId = Ext.util.Cookies.get('sessionId');
        grid.store.load();

        contentPanel.removeAll();
        accountPanel.region = 'center';
        contentPanel.add(accountPanel);

    },

    onIndentButtonClick: function(button, e, eOpts) {
        var contentPanel = this.getContentPanel();
        var indentPanel = Ext.create('digitalmenu.view.IndentContainer');
        var grid = indentPanel.down('#accountListGrid');
        var cbRefreshTime = indentPanel.down('#cbRefreshTime');

        contentPanel.removeAll();
        indentPanel.region = 'center';
        cbRefreshTime.setValue(5);
        contentPanel.add(indentPanel);

    },

    onLogQueryMenuitemClick: function(item, e, eOpts) {
        var contentPanel = this.getContentPanel();
        var panel = Ext.create('digitalmenu.view.LogListContainer');
        var grid = panel.down('#logListGrid');

        contentPanel.removeAll();
        panel.region = 'center';
        contentPanel.add(panel);

    },

    onMenuitemChangeConfirmCodeClick: function(item, e, eOpts) {
        var p = Ext.create('digitalmenu.view.ChangeConfirmCodeForm');

        var tfoldcode = p.down('#tfOldCode');

        //var setoldcode = function(){
            Ext.Ajax.request({
                url: 'common/getconfirmcode',
                success : function(resp){
                    var result = Ext.decode(resp.responseText);
                    if(result.result ==='ok'){
                        tfoldcode.setValue(result.confirmCode);
                    }
                }
            });
        //};

        var win = Ext.create('Ext.window.Window',{
            height: 153,
            width: 280,
        	header: false,
        	modal: true,
            border: false,
        	items:[ p ]
        });

        //win.show(null, setoldcode);
        win.show();
    },

    onMenuitemMaintainMenuClick: function(item, e, eOpts) {
        var contentPanel = this.getContentPanel();
        var menuPanel = Ext.create('digitalmenu.view.MenuContainer');
        var treePanel = menuPanel.down('treepanel');

        menuPanel.down('#cbCategory1ID').store.load();
        menuPanel.down('#cbCategory2ID').store.load();

        contentPanel.removeAll();
        menuPanel.region = 'center';

        contentPanel.add(menuPanel);
    },

    onMenuitemMaintainDeskClick: function(item, e, eOpts) {
        var contentPanel = this.getContentPanel();
        var deskPanel = Ext.create('digitalmenu.view.DeskListContainer');
        var grid = deskPanel.down('#deskListGrid');

        grid.store.proxy.extraParams.userId = Ext.util.Cookies.get('userId');
        grid.store.proxy.extraParams.sessionId = Ext.util.Cookies.get('sessionId');
        grid.store.load();
        grid.store.sort('name','ASC');

        contentPanel.removeAll();
        deskPanel.region = 'center';
        contentPanel.add(deskPanel);

    },

    onMenuitemMaintainPrinter: function(item, e, eOpts) {
        var contentPanel = this.getContentPanel();
        var printerPanel = Ext.create('digitalmenu.view.PrinterListContainer');
        var grid = printerPanel.down('#printerListGrid');

        grid.store.proxy.extraParams.userId = Ext.util.Cookies.get('userId');
        grid.store.proxy.extraParams.sessionId = Ext.util.Cookies.get('sessionId');
        grid.store.load();

        contentPanel.removeAll();
        printerPanel.region = 'center';
        contentPanel.add(printerPanel);

    },

    init: function(application) {
        this.control({
            "#mainView #btnAccount": {
                click: this.onAccountButtonClick
            },
            "#mainView #btnIndent": {
                click: this.onIndentButtonClick
            },
            "#mainView #logQueryMenuItem": {
                click: this.onLogQueryMenuitemClick
            },
            "#mainView #menuitem_maintain_confirmcode": {
                click: this.onMenuitemChangeConfirmCodeClick
            },
            "#mainView #menuitem_maintain_menu": {
                click: this.onMenuitemMaintainMenuClick
            },
            "#mainView #menuitem_maintain_desk": {
                click: this.onMenuitemMaintainDeskClick
            },
            "#mainView #menuitem_maintain_printer": {
                click: this.onMenuitemMaintainPrinter
            }
        });
    }

});
