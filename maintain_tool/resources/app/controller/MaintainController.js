/*
 * File: app/controller/MaintainController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('digitalmenu.controller.MaintainController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'deskListContainer',
            selector: '#deskListContainer'
        },
        {
            ref: 'printerListContainer',
            selector: '#printerListContainer'
        }
    ],

    onAddDeskButtonClick: function(button, e, eOpts) {
        var grid = this.getDeskListContainer().down('grid');
        var values = {
            userId : Ext.util.Cookies.get("userId"),
            sessionId : Ext.util.Cookies.get("sessionId")
        };
        button.up('form').submit({
            url: "common/adddesk",
            params : values,
            success: function(form, action){
                var result = action.result;

                if(action.result.result =='ok'){
                    Ext.Msg.alert("SUCCESS","Create desk successfully.");
                    grid.store.load();
                    button.up('form').down('#txtName').setValue('');
                } else if (action.result.result =='invalid_session'){
                    digitalmenu.getApplication().onSessionExpired();
                } else {
                    Ext.Msg.alert('Failed',"Failed to create desk.", action.result.result);
                }
            },
            failure: function(form, action){
                Ext.Msg.alert('Failed',"Failed to create desk.", action.result.result);
            }
        });
    },

    onCancelDeskButtonClick: function(button, e, eOpts) {
        button.up('form').down('#txtName').setValue('');
    },

    onAddPrinterButtonClick: function(button, e, eOpts) {
        var grid = this.getPrinterListContainer().down('grid');
        var values = {
            userId : Ext.util.Cookies.get("userId"),
            sessionId : Ext.util.Cookies.get("sessionId")
        };
        button.up('form').submit({
            url: "common/addprinter",
            params : values,
            success: function(form, action){
                var result = action.result;

                if(action.result.result =='ok'){
                    Ext.Msg.alert("SUCCESS","Add printer successfully.");
                    grid.store.load();
                    button.up('form').down('#tfName').setValue('');
                    button.up('form').down('#tfIPAddress').setValue('');
                } else if (action.result.result =='invalid_session'){
                    digitalmenu.getApplication().onSessionExpired();
                } else {
                    Ext.Msg.alert('Failed',"Failed to add printer.", action.result.result);
                }
            },
            failure: function(form, action){
                Ext.Msg.alert('Failed',"Failed to add printer.", action.result.result);
            }
        });
    },

    onCancelPrinterButtonClick: function(button, e, eOpts) {
        button.up('form').down('#tfName').setValue('');
        button.up('form').down('#tfIPAddress').setValue('');
    },

    init: function(application) {
        this.control({
            "#deskListContainer #btnAdd": {
                click: this.onAddDeskButtonClick
            },
            "#deskListContainer #btnCancel": {
                click: this.onCancelDeskButtonClick
            },
            "#printerListContainer #btnAdd": {
                click: this.onAddPrinterButtonClick
            },
            "#printerListContainer #btnCancel": {
                click: this.onCancelPrinterButtonClick
            }
        });
    }

});
