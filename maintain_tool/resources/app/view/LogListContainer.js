/*
 * File: app/view/LogListContainer.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('digitalmenu.view.LogListContainer', {
    extend: 'Ext.container.Container',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Date',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.grid.View',
        'Ext.toolbar.Paging'
    ],

    height: 466,
    itemId: 'logListContainer',
    padding: 5,
    width: 843,
    layout: 'border',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    region: 'north',
                    height: 91,
                    itemId: 'queryForm',
                    margin: 5,
                    layout: 'column',
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'textfield',
                            itemId: 'txtMsg',
                            width: 539,
                            fieldLabel: 'Message',
                            name: 'message'
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'cbType',
                            fieldLabel: 'Type',
                            name: 'type',
                            displayField: 'name',
                            store: 'LogTypeLocalStore',
                            valueField: 'id'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtUsername',
                            fieldLabel: 'User',
                            name: 'username'
                        },
                        {
                            xtype: 'datefield',
                            itemId: 'startTime',
                            fieldLabel: 'Start Time',
                            name: 'startTime'
                        },
                        {
                            xtype: 'datefield',
                            itemId: 'endTime',
                            fieldLabel: 'End Time',
                            name: 'endTime'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var form = button.up('form');
                                grid = form.up('container').down('grid');
                                values = form.getValues();

                                grid.store.proxy.extraParams.userId = Ext.util.Cookies.get('userId');
                                grid.store.proxy.extraParams.sessionId = Ext.util.Cookies.get('sessionId');
                                grid.store.proxy.extraParams.message = values.message;
                                grid.store.proxy.extraParams.type = values.type;
                                grid.store.proxy.extraParams.username = values.username;
                                grid.store.proxy.extraParams.beginTime = values.startTime;
                                grid.store.proxy.extraParams.endTime = values.endTime;

                                grid.store.load();
                            },
                            formBind: true,
                            itemId: 'btnQuery',
                            text: 'Query'
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    region: 'center',
                    itemId: 'logListGrid',
                    margin: 5,
                    columnLines: true,
                    store: 'LogListStore',
                    columns: [
                        {
                            xtype: 'numbercolumn',
                            itemId: 'id',
                            width: 80,
                            dataIndex: 'id',
                            text: 'ID',
                            format: '0'
                        },
                        {
                            xtype: 'gridcolumn',
                            itemId: 'username',
                            dataIndex: 'username',
                            text: 'User'
                        },
                        {
                            xtype: 'gridcolumn',
                            itemId: 'type',
                            width: 150,
                            dataIndex: 'type',
                            text: 'Type'
                        },
                        {
                            xtype: 'datecolumn',
                            itemId: 'time',
                            width: 150,
                            defaultWidth: 150,
                            dataIndex: 'time',
                            text: 'Time',
                            format: 'y-M-d H:i:s'
                        },
                        {
                            xtype: 'gridcolumn',
                            itemId: 'message',
                            width: 500,
                            defaultWidth: 500,
                            dataIndex: 'message',
                            text: 'Message'
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'pagingtoolbar',
                            dock: 'bottom',
                            width: 360,
                            displayInfo: true,
                            store: 'LogListStore'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});