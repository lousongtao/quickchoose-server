/*
 * File: app/view/PrinterListContainer.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('digitalmenu.view.PrinterListContainer', {
    extend: 'Ext.container.Container',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Template',
        'Ext.XTemplate',
        'Ext.grid.column.Action',
        'Ext.form.Panel',
        'Ext.form.field.Number',
        'Ext.form.field.ComboBox',
        'Ext.button.Button'
    ],

    itemId: 'printerListContainer',
    padding: 5,
    layout: 'border',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    region: 'center',
                    frame: true,
                    itemId: 'printerListGrid',
                    margin: '5 0 0 0',
                    title: 'Printer List',
                    columnLines: true,
                    store: 'PrinterListStore',
                    viewConfig: {
                        frame: false,
                        itemId: 'printerListGridView'
                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            draggable: false,
                            frame: false,
                            dataIndex: 'id',
                            menuDisabled: true,
                            text: 'ID'
                        },
                        {
                            xtype: 'gridcolumn',
                            draggable: false,
                            width: 150,
                            sortable: true,
                            dataIndex: 'name',
                            menuDisabled: true,
                            text: 'Name'
                        },
                        {
                            xtype: 'gridcolumn',
                            draggable: false,
                            width: 150,
                            sortable: true,
                            dataIndex: 'printerName',
                            menuDisabled: true,
                            text: 'Printer Name'
                        },
                        {
                            xtype: 'gridcolumn',
                            draggable: false,
                            width: 150,
                            sortable: true,
                            dataIndex: 'copy',
                            menuDisabled: true,
                            text: 'Copy'
                        },
                        {
                            xtype: 'templatecolumn',
                            draggable: false,
                            itemId: 'printStyle',
                            tpl: [
                                '<tpl if=\'printStyle == 0\'>Print Together',
                                '<tpl elseif=\'printStyle == 1\'>Print Separately',
                                '</tpl>'
                            ],
                            width: 150,
                            sortable: true,
                            dataIndex: 'printStyle',
                            menuDisabled: true,
                            text: 'Print Style'
                        },
                        {
                            xtype: 'actioncolumn',
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        Ext.MessageBox.confirm(
                                        "Confirm",
                                        "Do you want to delete printer : " + record.data.name + "?",
                                        function(btnId) {
                                            if (btnId != 'yes')
                                            return;

                                            var values = {
                                                userId: Ext.util.Cookies.get("userId"),
                                                sessionId: Ext.util.Cookies.get("sessionId"),
                                                id: record.data.id
                                            };

                                            var successCallback = function(resp, ops) {
                                                var result = Ext.decode(resp.responseText);

                                                if (result.result == 'ok') {
                                                    Ext.Msg.alert("Done","Delete printer successfully");
                                                    view.store.load();
                                                } else if (result.result == 'invalid_session') {
                                                    digitalmenu.getApplication().onSessionExpired();
                                                } else {
                                                    Ext.Msg.alert("Failed to delete", result.result);
                                                }
                                            };

                                            var failureCallback = function(resp, ops) {
                                                Ext.Msg.alert("Failed to delete", resp);
                                            };

                                            Ext.Ajax.request({
                                                url: "common/deleteprinter",
                                                params: values,
                                                success: successCallback,
                                                failure: failureCallback
                                            });
                                        });
                                    },
                                    icon: 'images/icon_delete.png',
                                    tooltip: 'delete desk'
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'form',
                    region: 'south',
                    height: 200,
                    layout: 'auto',
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'textfield',
                            itemId: 'tfName',
                            width: 400,
                            fieldLabel: 'Name',
                            name: 'name',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'tfPrinterName',
                            width: 400,
                            fieldLabel: 'Printer Name',
                            name: 'printerName',
                            allowBlank: false
                        },
                        {
                            xtype: 'numberfield',
                            itemId: 'nfCopy',
                            width: 400,
                            fieldLabel: 'Copy',
                            name: 'copy',
                            value: 1
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'cbPrintStyle',
                            width: 400,
                            fieldLabel: 'Print Style',
                            name: 'printStyle',
                            value: 1,
                            editable: false,
                            displayField: 'name',
                            store: 'PrinteStyleLocalStore',
                            valueField: 'id'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnAdd',
                            margin: 10,
                            width: 100,
                            text: 'Add'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnCancel',
                            width: 100,
                            text: 'Cancel'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});