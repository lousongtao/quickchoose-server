{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "DeskManageController"
    },
    "designerId": "40fa707d-7aca-495a-84e3-271874a49e50",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#deskManageContainer deskCellPanel",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onDeskCellPanelRender",
                "implHandler": [
                    "//处理桌子选中和非选中状态\r",
                    "component.body.on('click', function(){\r",
                    "    if (component.getXType() == 'deskCellPanel'){\r",
                    "        if (component.isSelected){\r",
                    "            component.isSelected = false;\r",
                    "            component.body.setStyle('background', '#FFFFFF');\r",
                    "        } else {\r",
                    "            component.isSelected = true;\r",
                    "            component.body.setStyle('background', '#3892D3');\r",
                    "        }\r",
                    "    }\r",
                    "});"
                ],
                "name": "render",
                "scope": "me"
            },
            "designerId": "46cb1d63-f170-4e0b-b44f-fa6ff199311d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#deskManageContainer #btnCheckout",
                "designer|targetType": "Ext.button.Button",
                "fn": "onCheckOutButtonClick",
                "implHandler": [
                    "var deskContainer = this.getDeskManageContainer();\r",
                    "var pDesk = deskContainer.down('#pDeskArea');\r",
                    "var arrSelected = pDesk.getSelectDesks(pDesk.desklist);\r",
                    "if (arrSelected.length == 0)\r",
                    "    return;\r",
                    "if (arrSelected.length > 1){\r",
                    "    Ext.MessageBox.alert(\"Error\", \"Please select ONLY ONE table to Checkout.\");\r",
                    "    return;\r",
                    "}\r",
                    "var indentInfo = arrSelected[0].indentInfo;\r",
                    "\r",
                    "if (indentInfo == null){\r",
                    "    Ext.MessageBox.alert(\"Error\", \"This table is not open.\");\r",
                    "    return;\r",
                    "}\r",
                    "var checkoutForm = Ext.create('digitalmenu.view.IndentCheckoutForm');\r",
                    "checkoutForm.indentInfo = indentInfo;\r",
                    "checkoutForm.down('#lbDeskNo').setText('Table No :   ' + indentInfo.name);\r",
                    "checkoutForm.down('#lbIndentPrice').setText('Price   :   $' + indentInfo.price);\r",
                    "checkoutForm.down('#lbDiscountPrice').setText(indentInfo.price);\r",
                    "var win = Ext.create('Ext.window.Window',{\r",
                    "\r",
                    "\theader: false,\r",
                    "\tmodal: true,\r",
                    "    border: false,\r",
                    "\titems:[\r",
                    "        checkoutForm\r",
                    "\t]\r",
                    "\r",
                    "});\r",
                    "\r",
                    "win.show();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "0e863d9a-9460-4e30-9471-90fd42849ec6"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "shiftWorkListContainer",
                "selector": "#shiftWorkListContainer"
            },
            "designerId": "e4c7f545-c62e-4d30-87c3-c6074deeb4f1"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "deskManageContainer",
                "selector": "#deskManageContainer"
            },
            "designerId": "0f4d0cd0-303a-467a-8feb-3931cdf204ef"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "indentCheckoutForm",
                "selector": "#indentCheckoutForm"
            },
            "designerId": "b929fdc7-3838-4e73-97b2-ed55572b4401"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentCheckoutForm #nfDirectDiscount",
                "designer|targetType": "Ext.form.field.Number",
                "fn": "onDirectDiscountChange",
                "implHandler": [
                    "var indentInfo = field.up('form').indentInfo;\r",
                    "var rbDirect = field.up('form').down('#rbDirectDiscount');\r",
                    "if(!rbDirect.checked){\r",
                    "    return;\r",
                    "}\r",
                    "var lbShouldPay = field.up('form').down('#lbDiscountPrice');\r",
                    "lbShouldPay.setText(indentInfo.price - newValue);"
                ],
                "name": "change",
                "scope": "me"
            },
            "designerId": "9374cdb4-b626-4dd2-bd4f-8bee6c2dbe10"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentCheckoutForm #btnPay",
                "designer|targetType": "Ext.button.Button",
                "fn": "onIndentPayButtonClick",
                "implHandler": [
                    "var form = button.up('form');\r",
                    "var indentInfo = form.indentInfo;\r",
                    "var payway = 1;//cash\r",
                    "if (form.down('#rbPayByCard').checked){\r",
                    "    payway = 2;//bank card\r",
                    "} else if (form.down('#rbPayByMember').checked){\r",
                    "    payway = 3;//member card\r",
                    "}\r",
                    "\r",
                    "var values = {\r",
                    "    userId : Ext.util.Cookies.get(\"userId\"),\r",
                    "    sessionId : Ext.util.Cookies.get(\"sessionId\"),\r",
                    "    id : indentInfo.indentId,\r",
                    "    payWay : payway,\r",
                    "    paidPrice : form.down('#lbDiscountPrice').text,\r",
                    "    operatetype : 4 //pay = 4\r",
                    "};\r",
                    "\r",
                    "var win = form.up('window');\r",
                    "\r",
                    "var successCallback = function(resp){\r",
                    "        var result = Ext.decode(resp.responseText);\r",
                    "\r",
                    "        if(result.result ==='ok'){\r",
                    "            Ext.Msg.alert(\"SUCCESS\",\"Pay this order successfully.\");\r",
                    "            win.close();\r",
                    "        } else if (result.result ==='invalid_session'){\r",
                    "            digitalmenu.getApplication().onSessionExpired();\r",
                    "        } else {\r",
                    "            Ext.Msg.alert('Failed',\"Failed to pay this order.\", resp.responseText);\r",
                    "        }\r",
                    "    };\r",
                    "\r",
                    "Ext.Ajax.request({\r",
                    "                        url: \"indent/operateindent\",\r",
                    "                        params : values,\r",
                    "                        success : successCallback,\r",
                    "                        failure : function(resp){\r",
                    "                                Ext.Msg.alert('Failed',\"Failed to pay this order.\", resp.responseText);\r",
                    "                        }\r",
                    "                    });\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "e4cded99-6900-4f70-b5d7-244d1b726380"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#deskManageContainer #btnPrintDuizhangdan",
                "designer|targetType": "Ext.button.Button",
                "fn": "onPrintDuizhangdanButtonClick",
                "implHandler": [
                    "var deskContainer = this.getDeskManageContainer();\r",
                    "var pDesk = deskContainer.down('#pDeskArea');\r",
                    "var arrSelected = pDesk.getSelectDesks(pDesk.desklist);\r",
                    "if (arrSelected.length == 0)\r",
                    "    return;\r",
                    "if (arrSelected.length > 1){\r",
                    "    Ext.MessageBox.alert(\"Error\", \"Please select ONLY ONE table to print.\");\r",
                    "    return;\r",
                    "}\r",
                    "var indentInfo = arrSelected[0].indentInfo;\r",
                    "\r",
                    "if (indentInfo == null){\r",
                    "    Ext.MessageBox.alert(\"Error\", \"This table is not open.\");\r",
                    "    return;\r",
                    "}\r",
                    "var values = {\r",
                    "    userId : Ext.util.Cookies.get(\"userId\"),\r",
                    "    sessionId : Ext.util.Cookies.get(\"sessionId\"),\r",
                    "    indentId : indentInfo.indentId\r",
                    "};\r",
                    "\r",
                    "var me =this;\r",
                    "\r",
                    "var successCallback = function(resp){\r",
                    "        var result = Ext.decode(resp.responseText);\r",
                    "\r",
                    "        if(result.result ==='ok'){\r",
                    "            Ext.Msg.alert(\"SUCCESS\",\"Send print command to printer successfully.\");\r",
                    "        } else if (result.result ==='invalid_session'){\r",
                    "            digitalmenu.getApplication().onSessionExpired();\r",
                    "        } else {\r",
                    "            Ext.Msg.alert('Failed',\"Failed to send print command.\", resp.responseText);\r",
                    "        }\r",
                    "    };\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\", \"You will print the order on desk \"+ indentInfo.name,\r",
                    "                function(btnId){\r",
                    "                    if (btnId === 'no'){\r",
                    "                        return;\r",
                    "                    }\r",
                    "                    Ext.Ajax.request({\r",
                    "                        url: \"indent/printindent\",\r",
                    "                        params : values,\r",
                    "                        success : successCallback,\r",
                    "                        failure : function(resp){\r",
                    "                                Ext.Msg.alert('Failed',\"Failed to send print command.\", resp.responseText);\r",
                    "                        }\r",
                    "                    });\r",
                    "                });\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "b4220105-37d4-49bb-a45e-c9d325d9547d"
        }
    ]
}