{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "IndentController"
    },
    "designerId": "4f09ac55-a77d-4a55-a247-5b6d5460d2a0",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "indentContainer",
                "selector": "#indentContainer"
            },
            "designerId": "b9c3c862-3c46-4d21-b5a2-f5354ba11e0d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #btnSetToday",
                "designer|targetType": "Ext.button.Button",
                "fn": "onSetTodayButtonClick",
                "implHandler": [
                    "var comStartDate = button.up('panel').down('#startDate');\r",
                    "var comStartTime = button.up('panel').down('#startTime');\r",
                    "var comEndDate = button.up('panel').down('#endDate');\r",
                    "var comEndTime = button.up('panel').down('#endTime');\r",
                    "var today = new Date();\r",
                    "var tomorrow = Ext.Date.add(today, Ext.Date.DAY, 1);\r",
                    "\r",
                    "comStartDate.setValue(today);\r",
                    "comEndDate.setValue(tomorrow);\r",
                    "comStartTime.setValue('4:00');\r",
                    "comEndTime.setValue('4:00');"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "dc760a38-e6e8-4fcb-bb69-cf4de8bb3ad2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #btnSetYesterday",
                "designer|targetType": "Ext.button.Button",
                "fn": "onSetYesterdayButtonClick",
                "implHandler": [
                    "var comStartDate = button.up('panel').down('#startDate');\r",
                    "var comStartTime = button.up('panel').down('#startTime');\r",
                    "var comEndDate = button.up('panel').down('#endDate');\r",
                    "var comEndTime = button.up('panel').down('#endTime');\r",
                    "var today = new Date();\r",
                    "var yesterday = Ext.Date.add(today, Ext.Date.DAY, -1);\r",
                    "\r",
                    "comStartDate.setValue(yesterday);\r",
                    "comEndDate.setValue(today);\r",
                    "comStartTime.setValue('4:00');\r",
                    "comEndTime.setValue('4:00');"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "1a772618-ee03-43a5-88f1-dd3c024201fb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #btnTimeClear",
                "designer|targetType": "Ext.button.Button",
                "fn": "onTimeClearButtonClick",
                "implHandler": [
                    "var comStartDate = button.up('panel').down('#startDate');\r",
                    "var comStartTime = button.up('panel').down('#startTime');\r",
                    "var comEndDate = button.up('panel').down('#endDate');\r",
                    "var comEndTime = button.up('panel').down('#endTime');\r",
                    "\r",
                    "comStartDate.setValue(null);\r",
                    "comEndDate.setValue(null);\r",
                    "comStartTime.setValue(null);\r",
                    "comEndTime.setValue(null);"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "7580931d-5b33-48d0-a502-255816d88fe6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #btnQuery",
                "designer|targetType": "Ext.button.Button",
                "fn": "onQueryIndentButtonClick",
                "implHandler": [
                    "var panelQuery = button.up('#pQuery');\r",
                    "\r",
                    "var comStartDate = panelQuery.down('#startDate');\r",
                    "var comStartTime = panelQuery.down('#startTime');\r",
                    "var comEndDate = panelQuery.down('#endDate');\r",
                    "var comEndTime = panelQuery.down('#endTime');\r",
                    "var txtDeskName = panelQuery.down('#txtDeskName');\r",
                    "var cbPaid = panelQuery.down('#cbPaid');\r",
                    "var cbUnpaid = panelQuery.down('#cbUnpaid');\r",
                    "var cbOtherStatus = panelQuery.down('#cbOtherStatus');\r",
                    "var cbOrderByTime = panelQuery.down('#cbOrderByTime');\r",
                    "var cbOrderByPayment = panelQuery.down('#cbOrderByPayment');\r",
                    "var cbOrderByDeskname = panelQuery.down('#cbOrderByDeskname');\r",
                    "var cbAutoRefresh = panelQuery.down('#cbAutoRefresh');\r",
                    "var cbRefreshTime = panelQuery.down('#cbRefreshTime');\r",
                    "var grid = this.getGridIndent();\r",
                    "\r",
                    "grid.store.proxy.extraParams.userId = Ext.util.Cookies.get('userId');\r",
                    "grid.store.proxy.extraParams.sessionId = Ext.util.Cookies.get('sessionId');\r",
                    "\r",
                    "if (comStartDate.getValue() !== null && comStartTime.getValue() !== null){\r",
                    "    var starttime = comStartDate.getRawValue() + \" \" + comStartTime.getRawValue();\r",
                    "    grid.store.proxy.extraParams.starttime = starttime;\r",
                    "} else {\r",
                    "    grid.store.proxy.extraParams.starttime = null;\r",
                    "}\r",
                    "\r",
                    "if (comEndDate.getValue() !== null && comEndTime.getValue() !== null){\r",
                    "    var endtime = comEndDate.getRawValue() + \" \" + comEndTime.getRawValue();\r",
                    "    grid.store.proxy.extraParams.endtime = endtime;\r",
                    "} else {\r",
                    "    grid.store.proxy.extraParams.endtime = null;\r",
                    "}\r",
                    "\r",
                    "if (txtDeskName.getValue() !== null && txtDeskName.getValue().length > 0){\r",
                    "    grid.store.proxy.extraParams.deskname = txtDeskName.getValue();\r",
                    "} else {\r",
                    "    grid.store.proxy.extraParams.deskname = null;\r",
                    "}\r",
                    "\r",
                    "if (cbPaid.checked || cbUnpaid.checked || cbOtherStatus.checked){\r",
                    "    var status = \"\";\r",
                    "    if (cbPaid.checked){\r",
                    "        status += \"Paid\";\r",
                    "    }\r",
                    "    if (cbUnpaid.checked){\r",
                    "        status += \"Unpaid\";\r",
                    "    }\r",
                    "    if (cbOtherStatus.checked){\r",
                    "        status += \"Other\";\r",
                    "    }\r",
                    "    grid.store.proxy.extraParams.status = status;\r",
                    "} else {\r",
                    "    grid.store.proxy.extraParams.status = null;\r",
                    "}\r",
                    "\r",
                    "if (cbOrderByTime.checked || cbOrderByPayment.checked || cbOrderByDeskname.checked){\r",
                    "    var orderby = \"\";\r",
                    "    if (cbOrderByTime.checked){\r",
                    "        orderby += \"time\";\r",
                    "    }\r",
                    "    if (cbOrderByPayment.checked){\r",
                    "        orderby += \"status\";\r",
                    "    }\r",
                    "    if (cbOrderByDeskname.checked){\r",
                    "        orderby += \"deskname\";\r",
                    "    }\r",
                    "    grid.store.proxy.extraParams.orderby = orderby;\r",
                    "} else {\r",
                    "    grid.store.proxy.extraParams.orderby = null;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if (cbAutoRefresh.checked){\r",
                    "    grid.store.loadPage(1);//没有这个loadPage方法, 如果前一次的查询, 被pagetoolbar翻页了, 再次查询就会沿用原来的页号, 可能导致界面无数据.\r",
                    "    Ext.TaskManager.stopAll();\r",
                    "    var task = Ext.TaskManager.start({\r",
                    "        run : function(){\r",
                    "            grid.store.load();\r",
                    "        },\r",
                    "        interval: cbRefreshTime.getValue() * 60 * 1000\r",
                    "    });\r",
                    "} else {\r",
                    "    grid.store.loadPage(1);//没有这个loadPage方法, 如果前一次的查询, 被pagetoolbar翻页了, 再次查询就会沿用原来的页号, 可能导致界面无数据.\r",
                    "}\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "41cdb63c-4c33-40ef-8cd0-f2a47b195b41"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #btnPayIndent",
                "designer|targetType": "Ext.button.Button",
                "fn": "onPayIndentButtonClick",
                "implHandler": [
                    "var grid = this.getGridIndent();\r",
                    "if (grid.getSelectionModel().getSelection() === 0)\r",
                    "    return;\r",
                    "var record = grid.getSelectionModel().getSelection()[0];\r",
                    "var values = {\r",
                    "    userId : Ext.util.Cookies.get(\"userId\"),\r",
                    "    sessionId : Ext.util.Cookies.get(\"sessionId\"),\r",
                    "    id : record.get('id'),\r",
                    "    operatetype : 4 //pay = 4\r",
                    "};\r",
                    "\r",
                    "var me =this;\r",
                    "\r",
                    "var successCallback = function(resp){\r",
                    "        var result = Ext.decode(resp.responseText);\r",
                    "\r",
                    "        if(result.result ==='ok'){\r",
                    "            Ext.Msg.alert(\"SUCCESS\",\"Pay this order successfully.\");\r",
                    "            //refresh grid\r",
                    "            grid.store.load();\r",
                    "        } else if (result.result ==='invalid_session'){\r",
                    "            digitalmenu.getApplication().onSessionExpired();\r",
                    "        } else {\r",
                    "            Ext.Msg.alert('Failed',\"Failed to pay this order.\", resp.responseText);\r",
                    "        }\r",
                    "    };\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\", \"You will pay the order of desk \"+ record.get('deskname'),\r",
                    "                function(btnId){\r",
                    "                    if (btnId === 'no'){\r",
                    "                        return;\r",
                    "                    }\r",
                    "                    Ext.Ajax.request({\r",
                    "                        url: \"indent/operateindent\",\r",
                    "                        params : values,\r",
                    "                        success : successCallback,\r",
                    "                        failure : function(resp){\r",
                    "                                Ext.Msg.alert('Failed',\"Failed to pay this order.\", resp.responseText);\r",
                    "                        }\r",
                    "                    });\r",
                    "                });\r",
                    "\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "33d97f1d-cccf-4914-a698-d06943a985b5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #btnCancelIndent",
                "designer|targetType": "Ext.button.Button",
                "fn": "onCancelIndentButtonClick",
                "implHandler": [
                    "var grid = this.getGridIndent();\r",
                    "if (grid.getSelectionModel().getSelection() === 0)\r",
                    "    return;\r",
                    "var record = grid.getSelectionModel().getSelection()[0];\r",
                    "var values = {\r",
                    "    userId : Ext.util.Cookies.get(\"userId\"),\r",
                    "    sessionId : Ext.util.Cookies.get(\"sessionId\"),\r",
                    "    id : record.get('id'),\r",
                    "    operatetype : 3 //cancel = 3\r",
                    "};\r",
                    "\r",
                    "var me =this;\r",
                    "\r",
                    "var successCallback = function(resp){\r",
                    "        var result = Ext.decode(resp.responseText);\r",
                    "\r",
                    "        if(result.result ==='ok'){\r",
                    "            Ext.Msg.alert(\"SUCCESS\",\"Cancel this order successfully.\");\r",
                    "            //refresh grid\r",
                    "            grid.store.load();\r",
                    "        } else if (result.result ==='invalid_session'){\r",
                    "            digitalmenu.getApplication().onSessionExpired();\r",
                    "        } else {\r",
                    "            Ext.Msg.alert('Failed',\"Failed to cancel this order.\", resp.responseText);\r",
                    "        }\r",
                    "    };\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\", \"You will cancel the order of desk \"+ record.get('deskname'),\r",
                    "                function(btnId){\r",
                    "                    if (btnId === 'no'){\r",
                    "                        return;\r",
                    "                    }\r",
                    "                    Ext.Ajax.request({\r",
                    "                        url: \"indent/operateindent\",\r",
                    "                        params : values,\r",
                    "                        success : successCallback,\r",
                    "                        failure : function(resp){\r",
                    "                                Ext.Msg.alert('Failed',\"Failed to cancel this order.\", resp.responseText);\r",
                    "                        }\r",
                    "                    });\r",
                    "                });\r",
                    "\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "a8db5d4a-084b-4980-9666-b4dfeedc4803"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #btnPrintIndent",
                "designer|targetType": "Ext.button.Button",
                "fn": "onPrintIndentButtonClick",
                "implHandler": [
                    "var grid = this.getGridIndent();\r",
                    "if (grid.getSelectionModel().getSelection() === 0)\r",
                    "    return;\r",
                    "var record = grid.getSelectionModel().getSelection()[0];\r",
                    "var values = {\r",
                    "    userId : Ext.util.Cookies.get(\"userId\"),\r",
                    "    sessionId : Ext.util.Cookies.get(\"sessionId\"),\r",
                    "    indentId : record.get('id')\r",
                    "};\r",
                    "\r",
                    "var me =this;\r",
                    "\r",
                    "var successCallback = function(resp){\r",
                    "        var result = Ext.decode(resp.responseText);\r",
                    "\r",
                    "        if(result.result ==='ok'){\r",
                    "            Ext.Msg.alert(\"SUCCESS\",\"Send print command to printer successfully.\");\r",
                    "        } else if (result.result ==='invalid_session'){\r",
                    "            digitalmenu.getApplication().onSessionExpired();\r",
                    "        } else {\r",
                    "            Ext.Msg.alert('Failed',\"Failed to send print command.\", resp.responseText);\r",
                    "        }\r",
                    "    };\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\", \"You will print the order on desk \"+ record.get('deskname'),\r",
                    "                function(btnId){\r",
                    "                    if (btnId === 'no'){\r",
                    "                        return;\r",
                    "                    }\r",
                    "                    Ext.Ajax.request({\r",
                    "                        url: \"indent/printindent\",\r",
                    "                        params : values,\r",
                    "                        success : successCallback,\r",
                    "                        failure : function(resp){\r",
                    "                                Ext.Msg.alert('Failed',\"Failed to send print command.\", resp.responseText);\r",
                    "                        }\r",
                    "                    });\r",
                    "                });\r",
                    "\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "4fd4aedd-23c6-4a82-a59c-aea0a7364037"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #btnAddDish",
                "designer|targetType": "Ext.button.Button",
                "fn": "onAddDishButtonClick",
                "implHandler": [
                    "//check indent status first, only the UNPAID indent could do operation for detail\r",
                    "var indentGrid = this.getGridIndent();\r",
                    "if (indentGrid.getSelectionModel().getSelection() === 0)\r",
                    "    return;\r",
                    "var indentRecord = indentGrid.getSelectionModel().getSelection()[0];\r",
                    "if (indentRecord.get('status') !== 1){\r",
                    "    Ext.Msg.alert(\"Error\",\"This order is not in UNPAID status. Cannot do this operation for it.\");\r",
                    "    return;\r",
                    "}\r",
                    "\r",
                    "var p = Ext.create('digitalmenu.view.AddIndentDishForm');\r",
                    "\r",
                    "p.down('#nfIndentId').setValue(indentRecord.get('id'));\r",
                    "p.down('#cbCategory1').store.load();\r",
                    "\r",
                    "var win = Ext.create('Ext.window.Window',{\r",
                    "\theader: false,\r",
                    "\tmodal: true,\r",
                    "    border: false,\r",
                    "\titems:[ p ]\r",
                    "});\r",
                    "\r",
                    "win.show();\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "edf9a93b-683d-4146-b27f-72296eaabc7d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #btnDeleteDish",
                "designer|targetType": "Ext.button.Button",
                "fn": "onDeleteDishButtonClick",
                "implHandler": [
                    "//check indent status first, only the UNPAID indent could do operation for detail\r",
                    "var indentGrid = this.getGridIndent();\r",
                    "if (indentGrid.getSelectionModel().getSelection() === 0)\r",
                    "    return;\r",
                    "var indentRecord = indentGrid.getSelectionModel().getSelection()[0];\r",
                    "if (indentRecord.get('status') !== 1){\r",
                    "    Ext.Msg.alert(\"Error\",\"This order is not in UNPAID status. Cannot do this operation for it.\");\r",
                    "    return;\r",
                    "}\r",
                    "var grid = this.getGridIndentDetail();\r",
                    "if (grid.getSelectionModel().getSelection() === 0)\r",
                    "    return;\r",
                    "var record = grid.getSelectionModel().getSelection()[0];\r",
                    "var values = {\r",
                    "    userId : Ext.util.Cookies.get(\"userId\"),\r",
                    "    sessionId : Ext.util.Cookies.get(\"sessionId\"),\r",
                    "    indentId : indentRecord.get('id'),\r",
                    "    indentDetailId : record.get('id'),\r",
                    "    operatetype : 2 //delete = 2\r",
                    "};\r",
                    "\r",
                    "var me =this;\r",
                    "\r",
                    "var successCallback = function(resp){\r",
                    "        var result = Ext.decode(resp.responseText);\r",
                    "\r",
                    "        if(result.result ==='ok'){\r",
                    "            Ext.Msg.alert(\"SUCCESS\",\"Remove this dish successfully.\");\r",
                    "            //refresh grid\r",
                    "            grid.store.load();\r",
                    "            indentGrid.store.load();\r",
                    "        } else if (result.result ==='invalid_session'){\r",
                    "            digitalmenu.getApplication().onSessionExpired();\r",
                    "        } else {\r",
                    "            Ext.Msg.alert('Failed',\"Failed to remove this dish from order.\", resp.responseText);\r",
                    "        }\r",
                    "    };\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\", \"You will remove dish from the order of desk \"+ indentRecord.get('deskname'),\r",
                    "                function(btnId){\r",
                    "                    if (btnId === 'no'){\r",
                    "                        return;\r",
                    "                    }\r",
                    "                    Ext.Ajax.request({\r",
                    "                        url: \"indent/operateindentdetail\",\r",
                    "                        params : values,\r",
                    "                        success : successCallback,\r",
                    "                        failure : function(resp){\r",
                    "                                Ext.Msg.alert('Failed',\"Failed to remove dish from this order.\", resp.responseText);\r",
                    "                        }\r",
                    "                    });\r",
                    "                });"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "04b07add-4e11-4687-9c65-f09e4ce2931a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "gridIndent",
                "selector": "#indentContainer #gridIndent"
            },
            "designerId": "fd9fb64a-3abd-4c9e-8eec-5194a3bc2187"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "gridIndentDetail",
                "selector": "#indentContainer #gridIndentDetail"
            },
            "designerId": "5563d9f0-f1f8-454d-8e64-6b581e0aa989"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #btnChangeAmount",
                "designer|targetType": "Ext.button.Button",
                "fn": "onChangeAmountButtonClick",
                "implHandler": [
                    "//check indent status first, only the UNPAID indent could do operation for detail\r",
                    "var indentGrid = this.getGridIndent();\r",
                    "if (indentGrid.getSelectionModel().getSelection() === 0)\r",
                    "    return;\r",
                    "var indentRecord = indentGrid.getSelectionModel().getSelection()[0];\r",
                    "if (indentRecord.get('status') !== 1){\r",
                    "    Ext.Msg.alert(\"Error\",\"This order is not in UNPAID status. Cannot do this operation for it.\");\r",
                    "    return;\r",
                    "}\r",
                    "\r",
                    "var grid = this.getGridIndentDetail();\r",
                    "if (grid.getSelectionModel().getSelection() === 0)\r",
                    "    return;\r",
                    "var record = grid.getSelectionModel().getSelection()[0];\r",
                    "\r",
                    "var p = Ext.create('digitalmenu.view.ChangeIndentDishAmountForm');\r",
                    "\r",
                    "p.down('#nfOriginalAmount').setValue(record.get('amount'));\r",
                    "p.down('#nfIndentDetailId').setValue(record.get('id'));\r",
                    "\r",
                    "var win = Ext.create('Ext.window.Window',{\r",
                    "    height: 153,\r",
                    "    width: 280,\r",
                    "\theader: false,\r",
                    "\tmodal: true,\r",
                    "    border: false,\r",
                    "\titems:[ p ]\r",
                    "});\r",
                    "\r",
                    "win.show();\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "8b6fb047-1109-4048-81a5-130b53decd1a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #btnPrintIndentDetail",
                "designer|targetType": "Ext.button.Button",
                "fn": "onPrintIndentDetailButtonClick",
                "implHandler": [
                    "var grid = this.getGridIndentDetail();\r",
                    "if (grid.getSelectionModel().getSelection() === 0)\r",
                    "    return;\r",
                    "var record = grid.getSelectionModel().getSelection()[0];\r",
                    "\r",
                    "var values = {\r",
                    "    userId : Ext.util.Cookies.get(\"userId\"),\r",
                    "    sessionId : Ext.util.Cookies.get(\"sessionId\"),\r",
                    "    indentDetailId : record.get('id')\r",
                    "};\r",
                    "\r",
                    "var me =this;\r",
                    "\r",
                    "var successCallback = function(resp){\r",
                    "        var result = Ext.decode(resp.responseText);\r",
                    "\r",
                    "        if(result.result ==='ok'){\r",
                    "            Ext.Msg.alert(\"SUCCESS\",\"Send print command to printer successfully.\");\r",
                    "        } else if (result.result ==='invalid_session'){\r",
                    "            digitalmenu.getApplication().onSessionExpired();\r",
                    "        } else {\r",
                    "            Ext.Msg.alert('Failed',\"Failed to send print command.\", resp.responseText);\r",
                    "        }\r",
                    "    };\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\", \"You will print the dish \"+ record.get('dishChineseName'),\r",
                    "                function(btnId){\r",
                    "                    if (btnId === 'no'){\r",
                    "                        return;\r",
                    "                    }\r",
                    "                    Ext.Ajax.request({\r",
                    "                        url: \"indent/printindentdetail\",\r",
                    "                        params : values,\r",
                    "                        success : successCallback,\r",
                    "                        failure : function(resp){\r",
                    "                                Ext.Msg.alert('Failed',\"Failed to send print command.\", resp.responseText);\r",
                    "                        }\r",
                    "                    });\r",
                    "                });\r",
                    "\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "e0026e40-70b0-4ead-b2ea-00dcb06251a3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#formChangeIndentDishAmount #btnSave",
                "designer|targetType": "Ext.button.Button",
                "fn": "onSaveChangeAmountButtonClick",
                "implHandler": [
                    "var indentGrid = this.getGridIndent();\r",
                    "var grid = this.getGridIndentDetail();\r",
                    "var indentDetailId = button.up('form').getValues().id;\r",
                    "var newAmount = button.up('form').getValues().newAmount;\r",
                    "var successCallback = function(form, action){\r",
                    "    if(action.result.result =='ok'){\r",
                    "        Ext.Msg.alert(\"SUCCESS\",\"Change amount successfully.\");\r",
                    "        var win = button.up('form').up('window');\r",
                    "        win.close();\r",
                    "        grid.store.load();\r",
                    "        indentGrid.store.load();\r",
                    "    } else if (result.result == 'invalid_session'){\r",
                    "        digitalmenu.getApplication().onSessionExpired();\r",
                    "    } else {\r",
                    "        Ext.Msg.alert('Failed', 'failed to change amount, please do again');\r",
                    "    }\r",
                    "};\r",
                    "\r",
                    "var failureCallback = function(resp){\r",
                    "    Ext.Msg.alert('Failed','failed to change amount, please do again');\r",
                    "};\r",
                    "\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\", \"You will change the dish amount in the order\",\r",
                    "                function(btnId){\r",
                    "                    if (btnId === 'no'){\r",
                    "                        return;\r",
                    "                    }\r",
                    "                    button.up('form').submit({\r",
                    "                        url: \"indent/operateindentdetail\",\r",
                    "                        params: {\r",
                    "                            userId : Ext.util.Cookies.get('userId'),\r",
                    "                            sessionId : Ext.util.Cookies.get('sessionId'),\r",
                    "                            indentDetailId : indentDetailId,\r",
                    "                            newAmount : newAmount,\r",
                    "                            operatetype : 5 //CHANGEAMOUNT = 5\r",
                    "                        },\r",
                    "                        success : successCallback,\r",
                    "                        failure : function(form, action){\r",
                    "                                Ext.Msg.alert('Failed',\"Failed to change dish amount in this order.\", action.result.result);\r",
                    "                        }\r",
                    "                    });\r",
                    "                });\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "0c6cf80a-21a0-4447-96f9-cc07fcc7cddc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#formAddIndentDish #btnSave",
                "designer|targetType": "Ext.button.Button",
                "fn": "onSaveAddDishButtonClick",
                "implHandler": [
                    "var grid = this.getGridIndentDetail();\r",
                    "var indentGrid = this.getGridIndent();\r",
                    "\r",
                    "var successCallback = function(form, action){\r",
                    "    if(action.result.result ==='ok'){\r",
                    "        Ext.Msg.alert(\"SUCCESS\",\"Add dish successfully.\");\r",
                    "        var win = button.up('form').up('window');\r",
                    "        win.close();\r",
                    "        grid.store.load();\r",
                    "        indentGrid.store.load();\r",
                    "    } else if (action.result.result === 'invalid_session'){\r",
                    "        digitalmenu.getApplication().onSessionExpired();\r",
                    "    } else {\r",
                    "        Ext.Msg.alert('Failed', 'failed to add dish, please do again');\r",
                    "    }\r",
                    "};\r",
                    "\r",
                    "var failureCallback = function(resp){\r",
                    "    Ext.Msg.alert('Failed','failed to add dish, please do again');\r",
                    "};\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\", \"You will add dish into the order\",\r",
                    "                function(btnId){\r",
                    "                    if (btnId === 'no'){\r",
                    "                        return;\r",
                    "                    }\r",
                    "                    button.up('form').submit({\r",
                    "                        url: \"indent/operateindentdetail\",\r",
                    "                        params: {\r",
                    "                            userId : Ext.util.Cookies.get('userId'),\r",
                    "                            sessionId : Ext.util.Cookies.get('sessionId'),\r",
                    "                            operatetype : 1 //ADD dish = 1\r",
                    "                        },\r",
                    "                        success : successCallback,\r",
                    "                        failure : function(form, action){\r",
                    "                                Ext.Msg.alert('Failed',\"Failed to add dish into this order.\", action.result.result);\r",
                    "                        }\r",
                    "                    });\r",
                    "                });\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "7355025d-01f9-4103-8c01-1d41ddf8864a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #gridIndent",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onIndentRowClick",
                "implHandler": [
                    "var grid = this.getGridIndentDetail();\r",
                    "\r",
                    "grid.store.proxy.extraParams.userId = Ext.util.Cookies.get('userId');\r",
                    "grid.store.proxy.extraParams.sessionId = Ext.util.Cookies.get('sessionId');\r",
                    "grid.store.proxy.extraParams.indentId = record.get('id');\r",
                    "\r",
                    "grid.store.load();"
                ],
                "name": "itemclick",
                "scope": "me"
            },
            "designerId": "c1e99330-9f4f-4a29-b0e8-bc4c94021223"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "formChangeIndentDishAmount",
                "selector": "#formChangeIndentDishAmount"
            },
            "designerId": "437d5c8a-f1de-4b5c-905c-4cc139570d79"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#formAddIndentDish #cbCategory1",
                "designer|targetType": "Ext.form.field.ComboBox",
                "fn": "onChangeCategory14AddDish",
                "implHandler": [
                    "var cb = this.getFormAddIndentDish().down('#cbCategory2');\r",
                    "cb.setValue(null);\r",
                    "cb.store.proxy.extraParams.category1Id = newValue;\r",
                    "cb.store.load(function(records, operation, success){\r",
                    "    if (records.length > 0){\r",
                    "        cb.setValue(records[0]);\r",
                    "    }\r",
                    "});\r",
                    ""
                ],
                "name": "change",
                "scope": "me"
            },
            "designerId": "3d987863-7614-4df6-a495-0b6430dcb2c8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#formAddIndentDish #cbCategory2",
                "designer|targetType": "Ext.form.field.ComboBox",
                "fn": "onChangeCategory24AddDish",
                "implHandler": [
                    "var cb = this.getFormAddIndentDish().down('#cbDish');\r",
                    "cb.setValue(null);\r",
                    "cb.store.proxy.extraParams.category2Id = newValue;\r",
                    "cb.store.load(function(records, operation, success){\r",
                    "    if (records.length > 0){\r",
                    "        cb.setValue(records[0]);\r",
                    "    }\r",
                    "});\r",
                    ""
                ],
                "name": "change",
                "scope": "me"
            },
            "designerId": "e64205c9-e28c-4744-b15d-8c4f46922f2b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "formAddIndentDish",
                "selector": "#formAddIndentDish"
            },
            "designerId": "b4d4a133-caa2-49fd-8ba9-af12feb08131"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #cbAutoRefresh",
                "designer|targetType": "Ext.form.field.Checkbox",
                "fn": "onChangeAutoRefreshIndent",
                "implHandler": [
                    "var cbRefreshTime = this.getIndentContainer().down('#cbRefreshTime');\r",
                    "var grid = this.getIndentContainer().down('#gridIndent');\r",
                    "if (grid.store.proxy.extraParams.sessionId === undefined){\r",
                    "    return;\r",
                    "}\r",
                    "\r",
                    "if (newValue){\r",
                    "    Ext.TaskManager.stopAll();\r",
                    "    var task = Ext.TaskManager.start({\r",
                    "        run : function(){\r",
                    "            grid.store.load();\r",
                    "        },\r",
                    "        interval: cbRefreshTime.getValue() * 60 * 1000\r",
                    "    });\r",
                    "} else {\r",
                    "    Ext.TaskManager.stopAll();\r",
                    "}"
                ],
                "name": "change",
                "scope": "me"
            },
            "designerId": "a1447f40-6a33-4436-ae3b-827a0f306fca"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#indentContainer #cbRefreshTime",
                "designer|targetType": "Ext.form.field.ComboBox",
                "fn": "onChangeRefreshTime",
                "implHandler": [
                    "var cbAutoRefresh = this.getIndentContainer().down('#cbAutoRefresh');\r",
                    "var grid = this.getIndentContainer().down('#gridIndent');\r",
                    "if (grid.store.proxy.extraParams.sessionId === undefined){\r",
                    "    return;\r",
                    "}\r",
                    "if (!cbAutoRefresh.checked){\r",
                    "    return;\r",
                    "}\r",
                    "Ext.TaskManager.stopAll();\r",
                    "var task = Ext.TaskManager.start({\r",
                    "    run : function(){\r",
                    "        grid.store.load();\r",
                    "    },\r",
                    "    interval: newValue * 60 * 1000\r",
                    "});\r",
                    ""
                ],
                "name": "change",
                "scope": "me"
            },
            "designerId": "55cec563-91bb-43a8-9db3-e3e3cdf688c4"
        }
    ]
}