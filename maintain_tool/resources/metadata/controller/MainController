{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MainController"
    },
    "designerId": "1c9d2a65-3336-4437-94fe-830cffc16a00",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainView #btnAccount",
                "designer|targetType": "Ext.button.Button",
                "fn": "onAccountButtonClick",
                "implHandler": [
                    "var contentPanel = this.getContentPanel();\r",
                    "var accountPanel = Ext.create('digitalmenu.view.AccountListContainer');\r",
                    "var grid = accountPanel.down('#accountListGrid');\r",
                    "\r",
                    "grid.store.proxy.extraParams.userId = Ext.util.Cookies.get('userId');\r",
                    "grid.store.proxy.extraParams.sessionId = Ext.util.Cookies.get('sessionId');\r",
                    "grid.store.load();\r",
                    "\r",
                    "contentPanel.removeAll();\r",
                    "accountPanel.region = 'center';\r",
                    "contentPanel.add(accountPanel);\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "57ec4939-5d10-4e9e-a2e9-cfaca393af9d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainView #btnIndent",
                "designer|targetType": "Ext.button.Button",
                "fn": "onIndentButtonClick",
                "implHandler": [
                    "var contentPanel = this.getContentPanel();\r",
                    "var indentPanel = Ext.create('digitalmenu.view.IndentContainer');\r",
                    "var grid = indentPanel.down('#accountListGrid');\r",
                    "var cbRefreshTime = indentPanel.down('#cbRefreshTime');\r",
                    "\r",
                    "contentPanel.removeAll();\r",
                    "indentPanel.region = 'center';\r",
                    "cbRefreshTime.setValue(5);\r",
                    "contentPanel.add(indentPanel);\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "64302cd5-b833-47f5-bc0a-ea19629f3542"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainView #btnTableMgr",
                "designer|targetType": "Ext.button.Button",
                "fn": "onTableManageButtonClick",
                "implHandler": [
                    "var contentPanel = this.getContentPanel();\r",
                    "var container = Ext.create('digitalmenu.view.DeskManageContainer');\r",
                    "var deskPanel = container.down('#pDeskArea');\r",
                    "\r",
                    "var successCallback = function(resp, ops) {\r",
                    "  var result = Ext.decode(resp.responseText);\r",
                    "\r",
                    "  if (result.result == 'ok') {\r",
                    "\r",
                    "    var desks = result.desks;\r",
                    "    for(var i = 0; i < desks.length; i++){\r",
                    "        var tabi = Ext.create('digitalmenu.view.DeskCell');\r",
                    "        var lbDeskNo = tabi.down('#lbDeskNo');\r",
                    "        lbDeskNo.setText(desks[i].name);\r",
                    "        tabi.deskid = desks[i].id;\r",
                    "        if (desks[i].indentId > 0){\r",
                    "            //tabi.indentid = desks[i].indentId;\r",
                    "            tabi.indentInfo = desks[i];\r",
                    "            tabi.down('#lbCustomerAmount').setText('客人数 ' + desks[i].customerAmount);\r",
                    "            tabi.down('#lbStartTime').setText('开始时间 ' + desks[i].startTime);\r",
                    "            tabi.down('#lbPrice').setText('价格 $' + desks[i].price);\r",
                    "        }\r",
                    "\r",
                    "        deskPanel.add(tabi);\r",
                    "        deskPanel.desklist.push(tabi);//加入存储列表\r",
                    "    }\r",
                    "\r",
                    "    contentPanel.removeAll();\r",
                    "    container.region = 'center';\r",
                    "    contentPanel.add(container);\r",
                    "  } else {\r",
                    "    Ext.Msg.alert(\"数据加载失败\", result.result);\r",
                    "  }\r",
                    "};\r",
                    "\r",
                    "var failureCallback = function(resp, ops) {\r",
                    "    var result = Ext.decode(resp.responseText);\r",
                    "    Ext.Msg.alert(\"数据加载失败\", result.result);\r",
                    "};\r",
                    "\r",
                    "Ext.Ajax.request({\r",
                    "    url : \"common/getdeskswithindents\",\r",
                    "    params : {\r",
                    "        userId : Ext.util.Cookies.get('userId'),\r",
                    "        sessionId : Ext.util.Cookies.get('sessionId')\r",
                    "    },\r",
                    "    success : successCallback,\r",
                    "    failure : failureCallback\r",
                    "});\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "94c683ca-9e82-41b3-9f97-fcc6084abc68"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainView #logQueryMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onLogQueryMenuitemClick",
                "implHandler": [
                    "var contentPanel = this.getContentPanel();\r",
                    "var panel = Ext.create('digitalmenu.view.LogListContainer');\r",
                    "var grid = panel.down('#logListGrid');\r",
                    "\r",
                    "contentPanel.removeAll();\r",
                    "panel.region = 'center';\r",
                    "contentPanel.add(panel);\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "406c7472-6f61-4ed0-b551-84802d59110d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "contentPanel",
                "selector": "#mainView #contentPanel"
            },
            "designerId": "9a6b69c8-7f6e-47f5-9f00-cb0f0b036c24"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainView #indentQueryMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onIndentQueryMenuitemClick",
                "implHandler": [
                    "var contentPanel = this.getContentPanel();\r",
                    "var indentPanel = Ext.create('digitalmenu.view.IndentContainer');\r",
                    "var grid = indentPanel.down('#accountListGrid');\r",
                    "var cbRefreshTime = indentPanel.down('#cbRefreshTime');\r",
                    "\r",
                    "contentPanel.removeAll();\r",
                    "indentPanel.region = 'center';\r",
                    "cbRefreshTime.setValue(5);\r",
                    "contentPanel.add(indentPanel);\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "b79d3757-cfec-4221-b370-6870752dae80"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainView #shiftWorkQueryMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onShiftWorkQueryMenuitemClick",
                "implHandler": [
                    "var contentPanel = this.getContentPanel();\r",
                    "var panel = Ext.create('digitalmenu.view.ShiftWorkListContainer');\r",
                    "\r",
                    "contentPanel.removeAll();\r",
                    "panel.region = 'center';\r",
                    "contentPanel.add(panel);\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "c11c818f-ef4e-4b56-9cdd-ff3b93383eb1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainView #menuitem_maintain_confirmcode",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onMenuitemChangeConfirmCodeClick",
                "implHandler": [
                    "var p = Ext.create('digitalmenu.view.ChangeConfirmCodeForm');\r",
                    "\r",
                    "var tfoldcode = p.down('#tfOldCode');\r",
                    "\r",
                    "//var setoldcode = function(){\r",
                    "    Ext.Ajax.request({\r",
                    "        url: 'common/getconfirmcode',\r",
                    "        success : function(resp){\r",
                    "            var result = Ext.decode(resp.responseText);\r",
                    "            if(result.result ==='ok'){\r",
                    "                tfoldcode.setValue(result.confirmCode);\r",
                    "            }\r",
                    "        }\r",
                    "    });\r",
                    "//};\r",
                    "\r",
                    "var win = Ext.create('Ext.window.Window',{\r",
                    "    height: 153,\r",
                    "    width: 280,\r",
                    "\theader: false,\r",
                    "\tmodal: true,\r",
                    "    border: false,\r",
                    "\titems:[ p ]\r",
                    "});\r",
                    "\r",
                    "//win.show(null, setoldcode);\r",
                    "win.show();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "ea4aefb0-70f6-4c25-9de3-024946a6e822"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainView #menuitem_maintain_menu",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onMenuitemMaintainMenuClick",
                "implHandler": [
                    "var contentPanel = this.getContentPanel();\r",
                    "var menuPanel = Ext.create('digitalmenu.view.MenuContainer');\r",
                    "var treePanel = menuPanel.down('treepanel');\r",
                    "\r",
                    "menuPanel.down('#cbCategory1ID').store.load();\r",
                    "menuPanel.down('#cbCategory2ID').store.load();\r",
                    "menuPanel.down('#cbPrinter').store.load();\r",
                    "\r",
                    "contentPanel.removeAll();\r",
                    "menuPanel.region = 'center';\r",
                    "\r",
                    "contentPanel.add(menuPanel);"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "26724060-f1e7-4019-aa60-01c511706ca1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainView #menuitem_maintain_desk",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onMenuitemMaintainDeskClick",
                "implHandler": [
                    "var contentPanel = this.getContentPanel();\r",
                    "var deskPanel = Ext.create('digitalmenu.view.DeskListContainer');\r",
                    "var grid = deskPanel.down('#deskListGrid');\r",
                    "\r",
                    "grid.store.proxy.extraParams.userId = Ext.util.Cookies.get('userId');\r",
                    "grid.store.proxy.extraParams.sessionId = Ext.util.Cookies.get('sessionId');\r",
                    "grid.store.load();\r",
                    "grid.store.sort('name','ASC');\r",
                    "\r",
                    "contentPanel.removeAll();\r",
                    "deskPanel.region = 'center';\r",
                    "contentPanel.add(deskPanel);\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "fb550f92-6e76-4d66-aed1-56d93a559643"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainView #menuitem_maintain_printer",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onMenuitemMaintainPrinter",
                "implHandler": [
                    "var contentPanel = this.getContentPanel();\r",
                    "var printerPanel = Ext.create('digitalmenu.view.PrinterListContainer');\r",
                    "var grid = printerPanel.down('#printerListGrid');\r",
                    "\r",
                    "grid.store.proxy.extraParams.userId = Ext.util.Cookies.get('userId');\r",
                    "grid.store.proxy.extraParams.sessionId = Ext.util.Cookies.get('sessionId');\r",
                    "grid.store.load();\r",
                    "\r",
                    "contentPanel.removeAll();\r",
                    "printerPanel.region = 'center';\r",
                    "contentPanel.add(printerPanel);\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "db3e03e3-40dc-4e12-bffc-0cb3f25f2d4e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport",
                "designer|targetType": "MainView",
                "fn": "onMainViewAfterLayout",
                "implHandler": [
                    "console.log('onMainViewAfterLayout');"
                ],
                "name": "afterlayout",
                "scope": "me"
            },
            "designerId": "ca059671-a945-47af-b64a-952044504346"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport",
                "designer|targetType": "MainView",
                "fn": "onMainViewAfterRender",
                "implHandler": [
                    "console.log('onMainViewAfterRender');"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "designerId": "e0bf7464-f7a4-4f3c-883d-dd1ca7e5a220"
        }
    ]
}